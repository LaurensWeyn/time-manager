<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd"
       default-init-method="init">

    <!--Main application Bean configuration file. This is the 'master' context used by all our Java utilities.-->
    <!--I don't recommend adding our main beans here other than context specific stuff like dataSource. use serviceBeans for that instead-->

    <!--serviceBeans included here-->
    <import resource="serviceBeans.xml"/>

    <!--Use this bean for standalone (non-Tomcat). Might use this for local integration tests later-->
    <!--<context:property-placeholder location="spring/jdbc.properties"/>
    <bean name="dataSource" class = "org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
      <property name="driverClassName" value="${jdbc.driver}"/>
      <property name="username" value="${jdbc.user}"/>
      <property name="password" value="${jdbc.password}"/>
      <property name="url" value="${jdbc.url}"/>
    </bean>-->

    <!--Use this bean for a datasource through Tomcat-->
    <jee:jndi-lookup id="dataSource" jndi-name="jdbc/stms" expected-type="javax.sql.DataSource"/>


    <context:annotation-config/><!--Avoids a lot of XML through annotations-->
</beans>